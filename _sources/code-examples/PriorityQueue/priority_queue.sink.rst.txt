:Example:

    .. code-block:: python

        # App/logic.py
        from DataStructures.Priority_queue import priority_queue as pq

        # Crea una nueva cola de prioridad
        queue = pq.new_heap(True)
        queue = pq.insert(queue, {'name': 'John', 'age': 32}, 32)
        queue = pq.insert(queue, {'name': 'Alice', 'age': 47}, 47)
        queue = pq.insert(queue, {'name': 'Bob', 'age': 18}, 18)
        queue = pq.insert(queue, {'name': 'Charlie', 'age': 22}, 22)
        queue = pq.insert(queue, {'name': 'Diana', 'age':11}, 11)
        print(queue)
        # Salida esperada:
        # {
        #   'elements': {
        #     'elements': [
        #       None,
        #       {
        #         'key': 11,
        #         'value': {
        #           'name': 'Diana',
        #           'age': 11
        #         }
        #       },
        #       {
        #         'key': 18,
        #         'value': {
        #           'name': 'Bob',
        #           'age': 18
        #         }
        #       },
        #       {
        #         'key': 32,
        #         'value': {
        #           'name': 'John',
        #           'age': 32
        #         }
        #       },
        #       {
        #         'key': 47,
        #         'value': {
        #           'name': 'Alice',
        #           'age': 47
        #         }
        #       },
        #       {
        #         'key': 22,
        #         'value': {
        #           'name': 'Charlie',
        #           'age': 22
        #         }
        #       }
        #     ],
        #     'size': 6
        #   },
        #   'size': 5,
        #   'cmp_function': <functiondefault_compare_lower_value>
        # }

        # Se elimina el primer elemento de la cola de prioridad
        # y se llama a la funci√≥n sink para organizar la cola
        pq.remove(queue)
        print(queue)
        # Salida esperada:
        # {
        #   'elements': {
        #     'elements': [
        #       None,
        #       {
        #         'key': 18,
        #         'value': {
        #           'name': 'Bob',
        #           'age': 18
        #         }
        #       },
        #       {
        #         'key': 22,
        #         'value': {
        #           'name': 'Charlie',
        #           'age': 22
        #         }
        #       },
        #       {
        #         'key': 32,
        #         'value': {
        #           'name': 'John',
        #           'age': 32
        #         }
        #       },
        #       {
        #         'key': 47,
        #         'value': {
        #           'name': 'Alice',
        #           'age': 47
        #         }
        #       }
        #     ],
        #     'size': 5
        #   },
        #   'size': 4,
        #   'cmp_function': <functiondefault_compare_lower_value>
        # }